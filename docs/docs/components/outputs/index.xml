<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Baker, high performance modular pipelines for the Big Data era – Outputs</title>
    <link>https://getbaker.io/docs/components/outputs/</link>
    <description>Recent content in Outputs on Baker, high performance modular pipelines for the Big Data era</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Dec 2022 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://getbaker.io/docs/components/outputs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: DynamoDB</title>
      <link>https://getbaker.io/docs/components/outputs/dynamodb/</link>
      <pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://getbaker.io/docs/components/outputs/dynamodb/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;strong&gt;Read the &lt;a href=&#34;https://pkg.go.dev/github.com/AdRoll/baker/output#DynamoDB&#34;&gt;API documentation »&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;output-dynamodb&#34;&gt;Output &lt;em&gt;DynamoDB&lt;/em&gt;&lt;/h2&gt;
&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;
&lt;p&gt;This is a &lt;em&gt;non-raw&lt;/em&gt; output, it doesn&amp;rsquo;t receive whole records. Instead it receives a list of fields for each record (&lt;code&gt;output.fields&lt;/code&gt; in TOML).&lt;/p&gt;
&lt;p&gt;This output writes the filtered log lines to DynamoDB. It must be
configured specifying the region, the table name, and the columns
to write.
Columns are specified using the syntax &amp;ldquo;t:name&amp;rdquo; where &amp;ldquo;t&amp;rdquo;
is the type of the data, and &amp;ldquo;name&amp;rdquo; is the name of column. Supported
types are: &amp;ldquo;n&amp;rdquo; - integers; &amp;ldquo;s&amp;rdquo; - strings.
The first column (and field) must be the primary key.&lt;/p&gt;
&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;
&lt;p&gt;Keys available in the &lt;code&gt;[output.config]&lt;/code&gt; section:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Type&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Default&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Regions&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;array of strings&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;us-west-2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;DynamoDB regions to connect to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Table&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;string&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;quot;&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;true&lt;/td&gt;
&lt;td&gt;Name of the table to modify&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Columns&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;array of strings&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[]&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;Table columns that correspond to each of the fields being written&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FlushInterval&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;duration&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1s&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;Interval at which flush the data to DynamoDB even if we have not reached 25 records&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MaxWritesPerSec&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;int&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;Maximum number of writes per second that DynamoDB can accept (0 for unlimited)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MaxBackoff&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;duration&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2m&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;Maximum retry/backoff time in case of errors before giving up&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: FileWriter</title>
      <link>https://getbaker.io/docs/components/outputs/filewriter/</link>
      <pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://getbaker.io/docs/components/outputs/filewriter/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;strong&gt;Read the &lt;a href=&#34;https://pkg.go.dev/github.com/AdRoll/baker/output#FileWriter&#34;&gt;API documentation »&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;output-filewriter&#34;&gt;Output &lt;em&gt;FileWriter&lt;/em&gt;&lt;/h2&gt;
&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;
&lt;p&gt;This is a &lt;em&gt;raw&lt;/em&gt; output, for each record it receives a buffer containing the serialized record, plus a list holding a set of fields (&lt;code&gt;output.fields&lt;/code&gt; in TOML).&lt;/p&gt;
&lt;p&gt;This output writes serialized records into compressed files, gzip (.gz) or zstd
(.zst) depending on the file extension in PathString.&lt;/p&gt;
&lt;p&gt;Generated files may be rotated if RotateInterval is set. PathString is used to
control the name of the generated files, it may contain placeholders. These
placeholders are evaluated each time a file is created, that is upon creation
of the output or everytime a rotation takes place.&lt;/p&gt;
&lt;p&gt;Supported placeholders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;{{.Year}}      year at file creation, 4 digits (YYYY)&lt;/li&gt;
&lt;li&gt;{{.Month}}     month number at file creation, 2 digits (MM)&lt;/li&gt;
&lt;li&gt;{{.Day}}       day of the month at file creation, 2 digits (DD)&lt;/li&gt;
&lt;li&gt;{{.Hour}}      hour at file creation in 24h format, 2 digits (HH)&lt;/li&gt;
&lt;li&gt;{{.Minute}}    minute at file creation, 2 digits (MM)&lt;/li&gt;
&lt;li&gt;{{.Second}}    second at file creation, 2 digits (SS)&lt;/li&gt;
&lt;li&gt;{{.Index}}     index of the current output process (see [output.procs]), 4 digits long&lt;/li&gt;
&lt;li&gt;{{.UUID}}      per-worker random UUID (v4 UUID), 36 chars long&lt;/li&gt;
&lt;li&gt;{{.Rotation}}  rotation count, 6 digits long&lt;/li&gt;
&lt;li&gt;{{.Field0}}    value of the first field provided in [output.fields] (only if present).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When choosing configuration values for your FileWriter, it&amp;rsquo;s important to keep in mind
the following rules:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A file should only ever be accessed by a single worker at a time.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you use multiple output processes, you should use {{.Index}} or {{.UUID}}
so that generated filenames are guaranteed to be different for each workers.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Rotation should never generate the same path twice.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To avoid a file to be overwritten by its successor in the rotation, you should ensure
that 2 files generated at a distance of RotateInterval will have different filenames.
To ensure filenames are different, you should set RotateInterval to a duration that
exceeds that of the time-based placeholder with the shortest span.&lt;/p&gt;
&lt;p&gt;For example, the following is correct since it&amp;rsquo;s the generated path is guaranteed to
be unique at each rotation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PathString = &amp;quot;/path/to/file-{{.Hour}}-{{.Minute}}.log.gz&amp;quot; 
RotateInterval = 5m
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, this is not correct, since successive generations may generate the exact same
path:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PathString = &amp;quot;/path/to/file-{{.Hour}}-{{.Minute}}.log.gz&amp;quot; 
RotateInterval = 1s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you use RotateSize you should also probably include {{.Rotation}}, to generate different
different paths:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PathString = &amp;quot;/path/to/file-{{.Rotation}}.log.gz&amp;quot; 
RotateSize = &amp;quot;128MB&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Only use {{.Field0}} if you trust the records you consume.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By using {{.Field0}} the files produces will have a path containing whatever value
is found. It could contain characters that are not valid to appear in a path. That also
means that the number of files (and workers) depend on the cardinality of that field.&lt;/p&gt;
&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;
&lt;p&gt;Keys available in the &lt;code&gt;[output.config]&lt;/code&gt; section:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Type&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Default&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PathString&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;string&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;quot;&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;Template describing names of the generated files. See top-level documentation for supported placeholders..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RotateInterval&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;duration&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;60s&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;Time interval between 2 successive file rotations. -1 disables interval-based rotation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RotateSize&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;bytes as int or string with SI or IEC unit&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;File size which when reached triggers a file rotation. Can be cumulated with RotateInterval. 0 to disable. Examples: 12000, 12KB, 1MB, 1MiB, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DiscardEmptyFiles&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;bool&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;By default, rotation may create empty files if no records were received. If true, then rotation is skipped if the file would be empty.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZstdCompressionLevel&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;int&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;Zstd compression level, ranging from 1 (best speed) to 19 (best compression).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZstdWindowLog&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;int&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;Enable zstd long distance matching. Increase memory usage for both compressor/decompressor. If more than 27 the decompressor requires special treatment. 0:disabled.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Nop</title>
      <link>https://getbaker.io/docs/components/outputs/nop/</link>
      <pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://getbaker.io/docs/components/outputs/nop/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;strong&gt;Read the &lt;a href=&#34;https://pkg.go.dev/github.com/AdRoll/baker/output#Nop&#34;&gt;API documentation »&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;output-nop&#34;&gt;Output &lt;em&gt;Nop&lt;/em&gt;&lt;/h2&gt;
&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;
&lt;p&gt;This is a &lt;em&gt;non-raw&lt;/em&gt; output, it doesn&amp;rsquo;t receive whole records. Instead it receives a list of fields for each record (&lt;code&gt;output.fields&lt;/code&gt; in TOML).&lt;/p&gt;
&lt;p&gt;No-operation output. This output simply drops all lines and does not write them anywhere.&lt;/p&gt;
&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;
&lt;p&gt;No configuration available&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OpLog</title>
      <link>https://getbaker.io/docs/components/outputs/oplog/</link>
      <pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://getbaker.io/docs/components/outputs/oplog/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;strong&gt;Read the &lt;a href=&#34;https://pkg.go.dev/github.com/AdRoll/baker/output#OpLog&#34;&gt;API documentation »&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;output-oplog&#34;&gt;Output &lt;em&gt;OpLog&lt;/em&gt;&lt;/h2&gt;
&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;
&lt;p&gt;This is a &lt;em&gt;non-raw&lt;/em&gt; output, it doesn&amp;rsquo;t receive whole records. Instead it receives a list of fields for each record (&lt;code&gt;output.fields&lt;/code&gt; in TOML).&lt;/p&gt;
&lt;p&gt;This output writes the filtered log lines into the current baker log, purely for development purpose.&lt;/p&gt;
&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;
&lt;p&gt;No configuration available&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Stats</title>
      <link>https://getbaker.io/docs/components/outputs/stats/</link>
      <pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://getbaker.io/docs/components/outputs/stats/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;strong&gt;Read the &lt;a href=&#34;https://pkg.go.dev/github.com/AdRoll/baker/output#Stats&#34;&gt;API documentation »&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;output-stats&#34;&gt;Output &lt;em&gt;Stats&lt;/em&gt;&lt;/h2&gt;
&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;
&lt;p&gt;This is a &lt;em&gt;raw&lt;/em&gt; output, for each record it receives a buffer containing the serialized record, plus a list holding a set of fields (&lt;code&gt;output.fields&lt;/code&gt; in TOML).&lt;/p&gt;
&lt;p&gt;Compute various distributions of the records it receives and dumps that to CSV. It computes the distribution of record by size and the distribution of the values of certain fields&lt;/p&gt;
&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;
&lt;p&gt;Keys available in the &lt;code&gt;[output.config]&lt;/code&gt; section:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Type&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Default&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CountEmptyFields&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;bool&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;Whether fields with empty values are counted or not&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSVPath&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;string&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ldquo;stats.csv&amp;rdquo;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;false&lt;/td&gt;
&lt;td&gt;Path of the CSV file to create&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TimestampField&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;string&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;quot;&amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;true&lt;/td&gt;
&lt;td&gt;Name of a field containing a POSIX timestamp (in seconds) used to build the times stats&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: WebSocket</title>
      <link>https://getbaker.io/docs/components/outputs/websocket/</link>
      <pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://getbaker.io/docs/components/outputs/websocket/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;strong&gt;Read the &lt;a href=&#34;https://pkg.go.dev/github.com/AdRoll/baker/output#WebSocket&#34;&gt;API documentation »&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;output-websocket&#34;&gt;Output &lt;em&gt;WebSocket&lt;/em&gt;&lt;/h2&gt;
&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;
&lt;p&gt;This is a &lt;em&gt;non-raw&lt;/em&gt; output, it doesn&amp;rsquo;t receive whole records. Instead it receives a list of fields for each record (&lt;code&gt;output.fields&lt;/code&gt; in TOML).&lt;/p&gt;
&lt;p&gt;This output writes the filtered log lines into any connected WebSocket client.&lt;/p&gt;
&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;
&lt;p&gt;No configuration available&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
