<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Baker, high performance modular pipelines for the Big Data era â€“ Tutorials</title>
    <link>https://getbaker.io/docs/tutorials/</link>
    <description>Recent content in Tutorials on Baker, high performance modular pipelines for the Big Data era</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://getbaker.io/docs/tutorials/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Basic: build a simple pipeline</title>
      <link>https://getbaker.io/docs/tutorials/basic/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://getbaker.io/docs/tutorials/basic/</guid>
      <description>
        
        
        &lt;p&gt;In this tutorial you&amp;rsquo;ll learn how to create a Baker-based program to process a given dataset
(in CSV format), filter records based on your needs and save the result to S3.&lt;/p&gt;
&lt;p&gt;The dataset we&amp;rsquo;re going to use is an open dataset containing ratings on many
&lt;a href=&#34;https://www.kaggle.com/residentmario/ramen-ratings&#34;&gt;Ramens&lt;/a&gt;, the famous japanese noodle soup!&lt;/p&gt;
&lt;p&gt;Our goal is to discard all ramens that have never been on a top-ten ranking, split the
results into multiple folders named after the ramens source countries, and upload the
resulting lists to S3.&lt;/p&gt;
&lt;h2 id=&#34;the-dataset&#34;&gt;The dataset&lt;/h2&gt;
&lt;p&gt;The dataset file has 7 columns:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;review_num&lt;/strong&gt;: the number of the review (higher numbers mean more recent reviews)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;brand&lt;/strong&gt;: the name of the restaurant&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;variety&lt;/strong&gt;: the name of the recipe&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;style&lt;/strong&gt;: the type of the ramen (cup, pack, bowl, etc)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;country&lt;/strong&gt;: self-explanatory&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;stars&lt;/strong&gt;: ratings stars (from 0 to 5)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;top_ten&lt;/strong&gt;: whether the ramen has been included in a top-ten ranking&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.kaggle.com/residentmario/ramen-ratings&#34;&gt;original CSV file&lt;/a&gt; can&amp;rsquo;t be immediately
used with Baker because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it includes a header row&lt;/li&gt;
&lt;li&gt;some fields have values with commas and thus are enclosed in double-quotes. Baker doesn&amp;rsquo;t support it&lt;/li&gt;
&lt;li&gt;the file is uncompressed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the purpose of this tutorial we&amp;rsquo;ve already prepared the final file for you and &lt;strong&gt;it is
available for downloading &lt;a href=&#34;https://getbaker.io/tutorial-base-dataset.csv.gz&#34;&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;the-required-components&#34;&gt;The required components&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://getbaker.io/docs/components/inputs/list/&#34;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt;: reads the input file from disk&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getbaker.io/docs/components/filters/notnull/&#34;&gt;&lt;code&gt;NotNull&lt;/code&gt;&lt;/a&gt;: discards all ramens without a top-ten entry&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getbaker.io/docs/components/outputs/filewriter/&#34;&gt;&lt;code&gt;FileWriter&lt;/code&gt;&lt;/a&gt;: saves the resulting file to disk&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getbaker.io/docs/components/uploads/s3/&#34;&gt;&lt;code&gt;S3&lt;/code&gt;&lt;/a&gt;: uploads the file to S3&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;baker-configuration&#34;&gt;Baker configuration&lt;/h2&gt;
&lt;p&gt;An essential thing to do is to create a configuration file for Baker, in
&lt;a href=&#34;https://github.com/toml-lang/toml&#34;&gt;TOML&lt;/a&gt; format, selecting the aforementioned components:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;[fields]
names = [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;review_num&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;brand&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;variety&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;style&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;country&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;stars&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;top_ten&amp;#34;&lt;/span&gt;]

[input]
name = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;List&amp;#34;&lt;/span&gt;

    [input.config]
    Files = [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/tmp/db.csv.gz&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# put the file wherever you like&lt;/span&gt;

[[filter]]
name = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;NotNull&amp;#34;&lt;/span&gt;

    [filter.config]
    Fields = [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;top_ten&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# discard all records with an empty top_ten field&lt;/span&gt;

[output]
name = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;FileWriter&amp;#34;&lt;/span&gt;
procs = &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;# With our PathString, FileWriter doesn&amp;#39;t support concurrency&lt;/span&gt;
fields = [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;country&amp;#34;&lt;/span&gt;]

    [output.config]
    PathString = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/tmp/out/{{.Field0}}/ramens.csv.gz&amp;#34;&lt;/span&gt;

[upload]
name=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;S3&amp;#34;&lt;/span&gt;

    [upload.config]
    Region = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;
    Bucket = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;myBucket&amp;#34;&lt;/span&gt;
    Prefix = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;ramens/&amp;#34;&lt;/span&gt;
    StagingPath = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/tmp/staging/&amp;#34;&lt;/span&gt;
    SourceBasePath = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/tmp/out/&amp;#34;&lt;/span&gt;
    Interval = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;60s&amp;#34;&lt;/span&gt;
    ExitOnError = &lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;create-the-program&#34;&gt;Create the program&lt;/h2&gt;
&lt;p&gt;Baker is a Go library. To use it, it is required to create a Go &lt;code&gt;main()&lt;/code&gt; function,
&lt;a href=&#34;https://getbaker.io/docs/how-tos/baker_components/&#34;&gt;define a &lt;code&gt;baker.Components&lt;/code&gt;&lt;/a&gt; object and pass it to
&lt;a href=&#34;https://pkg.go.dev/github.com/AdRoll/baker#MainCLI&#34;&gt;&lt;code&gt;baker.MainCLI()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;package&lt;/span&gt; main

&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; (
	&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;github.com/AdRoll/baker&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;() {
    components &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; baker.Components{&lt;span style=&#34;color:#6272a4&#34;&gt;/* define components */&lt;/span&gt;}
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; baker.&lt;span style=&#34;color:#50fa7b&#34;&gt;MainCLI&lt;/span&gt;(components); err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {
		log.&lt;span style=&#34;color:#50fa7b&#34;&gt;Fatal&lt;/span&gt;(err)
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;define-bakercomponents&#34;&gt;Define baker.Components&lt;/h3&gt;
&lt;p&gt;The only required fields in &lt;code&gt;baker.Components&lt;/code&gt; are the components that we need to use (the complete
guide to &lt;code&gt;baker.Components&lt;/code&gt; is &lt;a href=&#34;https://getbaker.io/docs/how-tos/baker_components/&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The simplest and more generic way to add the components to Baker is to add all of them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;components &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; baker.Components{
    Inputs:      input.All,
    Filters:     filter.All,
    Outputs:     output.All,
    Uploads:     upload.All,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The complete program (that is available in the
&lt;a href=&#34;https://github.com/AdRoll/baker/blob/main/tutorials/basic/main.go&#34;&gt;&lt;code&gt;tutorials/&lt;/code&gt; folder&lt;/a&gt; in
the Baker repository) is the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;package&lt;/span&gt; main

&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; (
	&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;github.com/AdRoll/baker&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;github.com/AdRoll/baker/input&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;github.com/AdRoll/baker/filter&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;github.com/AdRoll/baker/output&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;github.com/AdRoll/baker/upload&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;() {
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; baker.&lt;span style=&#34;color:#50fa7b&#34;&gt;MainCLI&lt;/span&gt;(baker.Components{
        Inputs:      input.All,
        Filters:     filter.All,
        Outputs:     output.All,
        Uploads:     upload.All,
    }); err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {
		log.&lt;span style=&#34;color:#50fa7b&#34;&gt;Fatal&lt;/span&gt;(err)
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;run-the-program&#34;&gt;Run the program&lt;/h2&gt;
&lt;p&gt;Once the code and the configuration files are ready, we can run the topology:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ go build -o myProgram ./main.go 
&lt;span style=&#34;color:#6272a4&#34;&gt;# Test it works as expected&lt;/span&gt;
$ ./myProgram -help
&lt;span style=&#34;color:#6272a4&#34;&gt;# run the topology&lt;/span&gt;
$ ./myProgram topology.toml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Among the messages that Baker prints on stdout, the stats messages are particularly interesting:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;Stats: 1s&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;w:0 r:0&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; total&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;w:41 r:2584 u:11&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; speed&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;w:20 r:1292&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; errors&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p:0 i:0 f:2543 o:0 u:0&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Take a look at the &lt;a href=&#34;https://getbaker.io/docs/how-tos/read_stats/&#34;&gt;dedicated page&lt;/a&gt; to learn how to read the values.&lt;/p&gt;
&lt;h2 id=&#34;verify-the-result&#34;&gt;Verify the result&lt;/h2&gt;
&lt;p&gt;The resulting files are split into multiple folders, one for each country, and then uploaded.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://getbaker.io/docs/components/uploads/s3/&#34;&gt;&lt;code&gt;S3&lt;/code&gt;&lt;/a&gt; upload removes the files from the local disk once uploaded,
so you&amp;rsquo;ll only find empty directories in the output destination folder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;~ ls -l /tmp/out/
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 China
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 Hong Kong
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 Indonesia
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 Japan
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 Malaysia
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 Myanmar
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 Singapore
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 South Korea
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 Taiwan
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 Thailand
drwxrwxr-x   - username &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt; Nov 11:43 USA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The files have been uploaded to S3:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;~ aws s3 ls --recursive s3://myBucket/ramens/
2020-11-16 11:43:59        &lt;span style=&#34;color:#bd93f9&#34;&gt;115&lt;/span&gt; ramens/China/ramens.csv.gz
2020-11-16 11:43:59         &lt;span style=&#34;color:#bd93f9&#34;&gt;83&lt;/span&gt; ramens/Hong Kong/ramens.csv.gz
2020-11-16 11:43:59        &lt;span style=&#34;color:#bd93f9&#34;&gt;223&lt;/span&gt; ramens/Indonesia/ramens.csv.gz
2020-11-16 11:43:59        &lt;span style=&#34;color:#bd93f9&#34;&gt;236&lt;/span&gt; ramens/Japan/ramens.csv.gz
2020-11-16 11:43:59        &lt;span style=&#34;color:#bd93f9&#34;&gt;240&lt;/span&gt; ramens/Malaysia/ramens.csv.gz
2020-11-16 11:43:59         &lt;span style=&#34;color:#bd93f9&#34;&gt;99&lt;/span&gt; ramens/Myanmar/ramens.csv.gz
2020-11-16 11:43:59        &lt;span style=&#34;color:#bd93f9&#34;&gt;219&lt;/span&gt; ramens/Singapore/ramens.csv.gz
2020-11-16 11:43:59        &lt;span style=&#34;color:#bd93f9&#34;&gt;265&lt;/span&gt; ramens/South Korea/ramens.csv.gz
2020-11-16 11:43:59        &lt;span style=&#34;color:#bd93f9&#34;&gt;159&lt;/span&gt; ramens/Taiwan/ramens.csv.gz
2020-11-16 11:43:59        &lt;span style=&#34;color:#bd93f9&#34;&gt;181&lt;/span&gt; ramens/Thailand/ramens.csv.gz
2020-11-16 11:43:59         &lt;span style=&#34;color:#bd93f9&#34;&gt;94&lt;/span&gt; ramens/USA/ramens.csv.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This is it for this basic tutorial. You have learned:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to create a simple Baker program to process a CSV dataset with minimal filtering and
upload the results to S3&lt;/li&gt;
&lt;li&gt;how to create the Baker TOML configuration file&lt;/li&gt;
&lt;li&gt;how to execute the program and verify the result&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can now improve your Baker knowledge by taking a look at the &lt;a href=&#34;https://getbaker.io/docs/tutorials/&#34;&gt;other tutorials&lt;/a&gt;
and learning more &lt;a href=&#34;https://getbaker.io/docs/how-tos/&#34;&gt;advanced topics&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
